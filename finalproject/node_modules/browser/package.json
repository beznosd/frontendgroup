{
  "_args": [
    [
      {
        "raw": "browser",
        "scope": null,
        "escapedName": "browser",
        "name": "browser",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Дарья\\Desktop\\finalproject"
    ]
  ],
  "_from": "browser@latest",
  "_id": "browser@0.2.6",
  "_inCache": true,
  "_location": "/browser",
  "_npmUser": {
    "name": "shinout",
    "email": "shinout310@gmail.com"
  },
  "_npmVersion": "1.1.69",
  "_phantomChildren": {},
  "_requested": {
    "raw": "browser",
    "scope": null,
    "escapedName": "browser",
    "name": "browser",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/browser/-/browser-0.2.6.tgz",
  "_shasum": "b2bd40539f6d1cafab12b7943954d7e758f6b63e",
  "_shrinkwrap": null,
  "_spec": "browser",
  "_where": "C:\\Users\\Дарья\\Desktop\\finalproject",
  "author": {
    "name": "SHIN Suzuki",
    "email": "shinout310@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shinout/browser/issues"
  },
  "dependencies": {
    "cheerio": "x.x.x",
    "junjo": ">=0.2.6",
    "termcolor": "x.x.x",
    "u2r": "x.x.x"
  },
  "description": "browsing urls with cookies, that is, we can scrape with authenticated pages!",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b2bd40539f6d1cafab12b7943954d7e758f6b63e",
    "tarball": "https://registry.npmjs.org/browser/-/browser-0.2.6.tgz"
  },
  "engine": "node >= 0.4.1",
  "homepage": "https://github.com/shinout/browser#readme",
  "licences": [
    {
      "type": "MIT",
      "url": "https://github.com/shinout/browser/raw/master/LICENCE"
    }
  ],
  "main": "./browser.js",
  "maintainers": [
    {
      "name": "shinout",
      "email": "shinout310@gmail.com"
    }
  ],
  "name": "browser",
  "optionalDependencies": {},
  "readme": "browser\n==========\n[Node.js] browsing urls with cookies, that is, we can scrape with authenticated pages!\n\n### Installation ###\n    git clone git://github.com/shinout/browser.git\n\n    OR\n\n    npm install browser \n\n### Features ###\n - automatic cookie management\n - easy asynchronous handling with <a href=\"https://github.com/shinout/Junjo.js\">Junjo.js</a>\n\n### Usage ###\n#### helloworld (onetime access) ####\n    var browser = require(\"browser\");\n    browser.browse(\"shinout.net\", function(err, out) {\n      console.log(out.result);\n    });\n\n#### helloworld2 (using object) ####\n    var browser = require(\"browser\");\n    var $b = new browser();\n    $b.browse('https://accounts.google.com/Login'); // browse this url\n\n    /* running on end of all browsings\n     *   err: error object or null\n     *   out: { result : result body, ...}\n     */\n    $b.on(\"end\", function(err, out) {\n      console.log(out.url, out.result, out.responseHeaders);\n    });\n    $b.run(); // execution\n\n#### login sample (requires jquery) ####\n    var userdata = {\n      email: \"XXXXXX@gmail.com\",\n      pass : \"XXXXXXXX\"\n    };\n\n    var $b = new browser();\n    $b.submit({\n      from : 'https://accounts.google.com/Login',\n      selector: \"#gaia_loginform\",\n      data : {\n        Email  : userdata.email,\n        Passwd : userdata.pass\n      }\n    });\n\n    // authenticated access\n    $b.browse('https://mail.google.com/mail/u/0/?ui=html&zy=d')\n    .after(); // browse after previously registered function\n\n    /* running on end of all browsings\n     *   err: error object or null\n     *   out: { result : result body, ...}\n     */\n    $b.on(\"end\", function(err, out) {\n      console.log(out.url, out.result, out.responseHeaders);\n    });\n\n#### login sample2 (do what $b.submit() is doing manually) ####\n    var userdata = {\n      email: \"XXXXXX@gmail.com\",\n      pass : \"XXXXXXXX\"\n    };\n\n    var browser = require(\"browser\");\n    var $b = new browser();\n    // $b.browse(the label of this request, url to access)\n    $b.browse('login', 'https://accounts.google.com/Login', {debug: true});\n\n    /* $b.browse(function(\n     *   err : errors occured in the previous request, \n     *   out : result of the previous browsing\n     *) { return url or return [url, options] }\n     */\n    $b.browse(function(err, out) {\n      var jsdom = require(\"jsdom\").jsdom;\n      var jquery = require(\"jquery\");\n      var window = jsdom(out.result).createWindow();\n      var $ = jquery.create(window);\n      var postdata = {\n        Email  : userdata.email,\n        Passwd : userdata.pass\n      };\n      var url = $(\"#gaia_loginform\").attr(\"action\");\n      // get hidden fields, and register them to post data\n      $(\"input\").each(function(k, el) {\n        var $el = $(el);\n        var name = $el.attr(\"name\"), type = $el.attr(\"type\"), val = $el.val();\n        if (type == \"hidden\" || type == \"submit\") postdata[name] = val;\n      });\n      return [url, {\n        data  : postdata, // set post data\n        method: \"POST\"    // set HTTP method (default: GET)\n      }];\n    })\n    .after(\"login\"); // browse after browsing with label=\"login\"\n\n    $b.browse('https://mail.google.com/mail/u/0/?ui=html&zy=d')\n    .after(); // browse after previously registered function\n\n    $b.on(\"end\", function(err, out) {\n      console.log(out.result);\n    });\n    $b.run();\n\n#### options object ####\n>option object to pass to $b.browse() is the same format as u2r options.\nSee <a href=\"https://github.com/shinout/u2r\">u2r</a> in detail.\nThe following are common options.\n\n - data   : (object) key-value pairs to pass to server\n - method : HTTP method (GET|POST|PUT|DELETE|HEAD). default: GET\n\n>all other values below are automatically generated from URL\n\n - host\n - protocol\n - path\n - port\n - body : querystring format of options.data\n\n#### keys of out object ####\n - result : response data(Buffer or String)\n - statusCode\n - location\n - responseHeaders\n - cookies : set-cookie headers\n - url : browsed url\n\n### Contact ###\nFeel free to contact <a href=\"twitter.com/shinout\">@shinout</a>!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinout/browser.git"
  },
  "tags": [
    "scraping",
    "browse",
    "url",
    "cookie",
    "crawling",
    "login",
    "sign-in"
  ],
  "version": "0.2.6"
}
